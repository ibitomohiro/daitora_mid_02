$color-main: #3F51B5;
$color-accent: #E81919;
$color-text: #333333;

$layout-width-inner: 1200px;

// ブレイクポイント
$breakpoints: (
  "sp": "(max-width: 767px)",
  "tab": "(min-width: 768px) and (max-width: #{$layout-width-inner - 1px})",
  "pc": "(min-width: #{layout-width-inner})",
)!default;

// メディアクエリ
@mixin mq($breakpoint: sp) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

// ボーダーの幅を含めるようにリセットCSS 
*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body {
  padding: 0;
  margin: 0;
}

body {
  font-family: "游ゴシック体", YuGothic, "游ゴシック Medium", "Yu Gothic Medium", "游ゴシック", "Yu Gothic", sans-serif;
  font-size: 16px;
  line-height: 1.6;
  background: #fff;
  color: $color-text;
}

img {
  // 画像を指定の範囲にしてしてもらうようにする
  max-width: 100%;
  height: auto;
}

ul,
ol {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}

.inner {
  // 幅はインナーの最大を取るように
  width: $layout-width-inner;
  max-width: 100%;
  // 幅を中央寄せする
  margin: 0 auto;

  @include mq('tab') {
    padding-left: 24px;
    padding-right: 24px;
  }

  @include mq('sp') {
    padding-left: 16px;
    padding-right: 16px;
  }
}

.section {
  padding: 100px 0 120px 0;

  @include mq('sp') {
    margin-top: 50px;
    padding-bottom: 60px;
  }
}


// 共通のタイトルのクラスを作成してそこに当て込む
.section-title {
  font-size: 48px;
  font-weight: 700;
  text-align: center;
  // 下に青いバーがあるのでそのスペースを取る
  padding-bottom: 28px;
  position: relative;

  &::after {
    content: "";
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    bottom: 0;
    // 青い線の大きさ w60 * h 4px
    width: 60px;
    height: 4px;
    background: $color-main;

    @include mq('sp') {
      width: 42px;
      height: 3px;
    }
  }

  @include mq('sp') {
    font-size: 26px;
    padding-bottom: 18px;
  }
}

a {
  // 親要素を継承するようにする
  color: inherit;
}

.header {
  background: $color-main;
  // ヘッダーの幅は100pxデザインカンプを確認
  height: 100px;
  // ヘッダーの固定
  position: fixed;
  // fixedを指定すると幅がなくなるので100%をつける
  width: 100%;
  // ヘッダーにシャドウがあるのでコーディング
  box-shadow: 0 3px 3px rgba(#000, 0.16);
  z-index: 2;
  top: 0;

  @include mq('sp') {
    // ヘッダーが高くなるので高さを調整、次にmain-vidualの上の余白を調整
    height: 60px;
  }
}

.header__inner {
  // ロゴとnavを横並びにするのでflexをあてる
  display: flex;
  align-items: center;
  // headerの100pxを継承するように上方向に高さを出す
  height: inherit;
}

.header__logo {
  // logoは w205px h40px
  width: 205px;

  @include mq('sp') {
    width: 182px;
  }
  img {
    // 画像はblock要素に変える 余白を出さないために inline-bolockではなく
    display: block;
  }
}

.header__nav {
  // liを横並びにするために親要素にflexを当てる
  display: flex;
  // 文字を上下中央寄せする
  align-items: center;
  // logoとnavを左側から離す
  margin-left: auto;

   @include mq('sp') {
    //  スマホサイズになったときnavが消えるようにする
     display: none;
   }
  li {
    // 最初の文字の余白入らないのでnot:nth-child
    &:not(:first-child) {
      // 文字の幅は40px
      margin-left: 40px;
    }
    a {
      color: #fff;
      text-decoration: none;
      position: relative;

      &::after {
        content: "";
        position: absolute;
        // navから8px下にあるため
        bottom: -8px;
        left: 0;
        width: 100%;
        // 栓の高さ
        height: 2px;
        // 透明の棒を疑似要素を使って設定するイメージ
        background: transparent;
        // 1.アニメーションを設定してあげる
        transition: all 0.3s ease 0s;
      }
      // 2.ホバー時にもアクティブの要素を付与するようにする
      &:hover,
      &.is-active {
        &::after {
          background: $color-accent;
        }
      }
    }
  }
}

// --------------main visual---------------
.main-visual {
  // 背景画像はw1200px * h600px
  height: 600px;
  width: 100%;
  // 繰り返さない、縦横中央、全体を覆うように
  background: url(../img/mainvisual.png) no-repeat center center /cover;
  // 親 absolute 子 relative
  position: relative;
  // fixedだとヘッダーの下に画像が回り込むのでヘッダーの高さ分マージンを取る
  // topにゼロをつけないと空白ができるのでそれも合わせてコーディングする
  margin-top: 100px;

  @include mq('sp') {
    margin-top: 60px;
    height: 420px;
  }
}

.main-visual__content {
  // 上下中央のCSSなので覚える
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  // コンテンツ全体にtext-align center を適用させる！
  text-align: center;

  @include mq('sp') {
    padding-left: 46px;
    padding-right: 46px;
  }
}

.main-visual__title {
  font-size: 64px;
  font-weight: 700;
  line-height: 1.3;

  @include mq('sp') {
    font-size: 32px;
  }
}

.main-visual__lead {
  font-size: 24px;
  font-weight: 700;
  // 実際より少し小さい値にすると良いらしい
  margin-top: 24px;

  @include mq('sp') {
    font-size: 18px;
    margin-top: 10px;
  }
}

.main-visual__button {
  margin-top: 36px;

  @include mq('sp') {
    margin-top: 28px;
  }

  a {
    display: inline-block;
    width: 390px;
    // ボタンの文字に固定値を設定した場合max-widthをつける
    max-width: 100%;
    height: 83px;
    line-height: 83px;
    font-size: 32px;
    font-weight: 700;
    text-align: center;
    color: #ffffff;
    background: $color-main;
    border-radius: 12px;
    box-shadow: 0 3px 6px rgba(#000, 0.16);
    text-decoration: none;
    // transitonで定義をする
    transition: all 0.3s ease 0s;

    @include mq('sp') {
      width: 280px;
      height: 60px;
      line-height: 60px;
      font-size: 24px;
    }
    &:hover {
      opacity: 0.7;
    }
  }
}

// --------------------カード-----------------------//
.card {
  // カード全体の色余白をコーディング
  background: #efefef;
  // 余白は上が100px,左右0, 下に120px
}

.card__inner {

}

.card__head {
  // card headはsection-titleに共通化したので削除！
}

.card__items {
  margin-top: 80px;
  // card-itemsを横並びにするので親要素にflexを当てる
  display: flex;
  // 改行があるのでflex wrapを当てる
  flex-wrap: wrap;

  @include mq('sp') {
    margin-top: 42px;
  }
}

.card__item {
  // 3等分なので33.3% 余白24pxが2つ カードが3つなので3で割るというロジック
  width: calc(33.3% - 24px * 2 / 3);
  background: #ffffff;
  padding: 16px;
  border-radius: 4px;

  @include mq('pc') {
    &:not(:nth-child(3n + 1)) {
      margin-left: 24px;
    }

    &:nth-child(n + 4) {
      // 最上部のカード以外はmargin-top24pxが適用されるようにする。　
      margin-top: 24px;
    }
  }  

  @include mq('tab') {
    // tab表示のときはカードを2つずつ表示する
    width: calc(50% - 24px * 1 / 2);

    &:not(:nth-child(2n + 1)) {
      margin-left: 24px;
    }

    &:nth-child(n + 3) {
      margin-top: 24px;
    }
  }

  @include mq('sp') {
    width: 100%;
    margin-left: 0;

    &:nth-child(n + 2) {
      margin-top: 24px;
    }
  }
}

.card__img {
  img {
    // 画像がぼやけるようだったら表示の仕方のコーディングを変えてあげる必要あり
    width: 100%;
  }
}

.card_title  {
  font-size: 20px;
  font-weight: 700;
  color: #6f7579;
  margin-top: 14px;
}

.card__text {
  color: #6f7579;
  font-weight: 700;
  // 2行以上の文章の場合はline heightを調整する必要がある
  // 行間24px font-size16pxなので 行間 / line-height の計算をする
  line-height: (24 / 16);
  margin-top: 10px;
}

// ------------ news -----------//

.news {
  background: #ffffff;
}

.news__inner {

}

.news__head {

}

.news__items {
  // 上に80px離れたところに青い棒がある 横は中央揃い
  margin: 80px auto 0;
  width: 800px;
  max-width: 100%;

  @include mq('sp') {
    margin-top: 40px;
  }
}

.news__item {
  display: flex;
  padding: 20px 0 12px;

  &:not(:first-child) {
    border-top: solid 1px #707070;
  }

  @include mq('sp') {
    display: block;
  }
}

.news__meta {
 display: flex;
//meta date + label 
width: 185px;
}

.news__date {
  // 日付85px余白20px
  width: 105px;
  padding: 3px;
}

.news__label {
  a {
    // 高さを出すためdisplay inline-block
    display: inline-block;
    width: 80px;
    height: 32px;
    line-height: 32px;
    color: #ffffff;
    text-align: center;
    background: #666666;
    border-radius: 4px;
    font-weight: 700;
    text-decoration: none;
    transition: all 0.3s ease 0s;
    &.is-blue {
      background: $color-main;
    }
    &.is-red {
      background: $color-accent;
    }

    &:hover {
      opacity: 0.7;
    }
  }
}

.news__title {
  // コメントの長さによって幅を変えるようにする。
  width: calc(100% - 185px);
  padding-left: 20px;
  padding-top: 3px;
  a {
    text-decoration: none;
    // 行間 / 文字の大きさ
    line-height: (20 / 16);
    transition: all 0.3s ease 0s;

    &:hover {
      opacity: 0.7;
    }
  }

  @include mq('sp') {
    width: 100%;
    padding-top: 0;
    margin-top: 6px;
  }
}

.news__more {
  margin-top: 60px;
  text-align: center;
  // 余白10px,→4pxで余白を取る

  @include mq('sp') {
    margin-top: 30px;
  }
  a {
    text-decoration: none;
    color:$color-accent;
    font-weight: 700;
    padding-right: 14px;
    position: relative;
    transition: all 0.3s ease 0s;

    &::after {
      content: "";
      position: absolute;
      right: 0;
      top: 50%;
      transform: translateY(-50%);
      // 画像のサイズが小さいので実際のサイズを画像ファイルを見て調整する
      width: 7px;
      height: 11px;
      background: url(../img/news-arrow.png) no-repeat center center / contain;
    }

    &:hover {
      opacity: 0.7;
    }
  }
}

// --------- price section -----------//

.price {
  
}

.price__inner {

}

.price__head {

}

.price__content {
  display: flex;
  margin-top: 80px;

  @include mq('sp') {
    display: block ;
    margin-top: 40px;
  }
}

.price__image {
  // innerの幅が1200pxなので割り算で求める
  width: 454 / 1200 * 100%;

  @include mq('sp') {
    width: 100%;
  }
  img {

  }
}
.price__table {
  // innerの幅が1200pxなので割り算で求める
  width: (172 + 268 + 268) / 1200 * 100%;
  margin-left: auto;

  @include mq('sp') {
    width: 100%;
    margin-top: 24px;
  }
}

.table {
  //エクセルのようにセルを１本の線で結ぶ
  border-collapse: collapse;
  border: 1px solid #707070;
  background: #ffffff;
  font-weight: 700;
  width: 100%;
  // tableを均等に分けるプロパティ
  table-layout: fixed;
  th,
  td {
    border: 1px solid #707070;
    padding: 0 24px;
    height: 58px;
    vertical-align: middle;
  }

  th {
    background: #999999;
    color: #ffffff;
    text-align: center;

    
    &:first-child {
      width: 172px;
      @include mq('sp') {
        width: 112px;
      }
    }
  }
  td {
    text-align: right;
  }
  strong {
    color: $color-accent;
    line-height: 1.2;
  }
  span {
    font-size: 13px;
    // 改行されるためブロック要素にする
    display: block;
    margin-top: 1px;
    line-height: 1.2;
  }
}

.price__attention {
  font-size: 14px;
  margin-top: 10px; 
  a {
    font-weight: 700;
    transition: all 0.3s ease 0s;

    &:hover {
      opacity: 0.7;
    }
  }
}

// ------------ access --------------//

.access {

}

.access__inner {

}

.access__head {

}

.access__map {
margin: 80px auto 0;
width: 800px;
max-width: 100%;

@include mq('sp') {
  margin-top: 40px;
}
}

.iframe-wrap {
  width: 100%;
  // width / height * 100%
  padding-top: 400 / 800 * 100%;
  position: relative;
  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

.access__info {
  // dtとdlを入れ終わったら横幅はiframeと同じ
  // padding 引数3つ 上、左右、下
  margin: 16px auto 0;
  width: 800px;
  max-width: 100%;
}

.access__info-row {
  display: flex;
  align-items: center;

  &:not(:first-child) {
    margin-top: 8px;
  }
  dt {
    // 余計な余白が入る場合があるのでリセットしておく
    margin: 0;
    padding: 0;
    font-weight: 700;
    // width 32px 余白72pxの合計
    width: 104px;
  }
  dd {
    // 余計な余白が入る場合があるのでリセットしておく
    margin: 0;
    padding: 0;
    // 100%から104pxを引いた可変の余白
    width: calc(100% - 104px);
  }
}

.access__button {
  text-align: center;
  margin-top: 30px;
  a {
    text-decoration: none;
    display: inline-block;
    width: 304px;
    color: #ffffff;
    font-weight: 700;
    padding: 16px 12px;
    background: $color-main;
    border-radius: 8px;
    box-shadow: 0 3px 6px rgba(#000, 0.16);
    position: relative;
    transition: all 0.3s ease 0s;
    &::after {
      content: "";
      position: absolute;
      top: 50%;
      right: 12px;
      transform: translateY(-50%);
      width: 17px;
      height: 16px;
      background: url(../img/button-arrow.png) no-repeat center center / contain;
    }

    &:hover {
      opacity: 0.7;
    }
  }
}

// --------- contact -------------//

.contact {
  background: #EFEFEF;
}

.contact__inner {

}

.contact__head {

}

.contact__form {
  margin: 80px auto 0;
  width: 800px;
  max-width: 100%;
  background: #ffffff;
  padding: 60px;

  @include mq('sp') {
    margin-top: 40px;
    padding: 24px;
  }
}

.contact-form {

}

.contact-form__dl {

}

.contact-form__row {
  display: flex;

  @include mq('sp') {
    display: block; 
  }
  &:not(:first-child) {
    margin-top: 60px;
    
    @include mq('sp') {
      margin-top: 30px;
    }
  }
}

.contact-form__label {
  width: 160px;
  padding: 5px 0 0;
  margin: 0;

  @include mq('sp') {
    width: 100%; 
  }
  label {
    font-weight: 700;
    // ラベルにクラスを設けて必須の箇所をコーディング
    &.is-required {
      display: inline-block;
      position: relative;

      &::after {
        content: "必須";
        position: absolute;
        top: calc(100% + 2px);
        left: 0;
        font-size: 14px;
        font-weight: 700;
        color: #ffffff;
        background: $color-accent;
        text-align: center;
        border-radius: 4px;
        padding: 2px 8px;
        line-height: 1;

        @include mq('sp') {
          top: 50%;
          transform: translateY(-50%);
          left: calc(100% + 6px);
          width: 44px;
        }
      }
    }
  }
}

.contact-form__input {
  width: calc(100% - 160px);
  margin: 0;
  padding: 0;

  @include mq('sp') {
    width: 100%;
    margin-top: 5px;
  }
  [type="text"] {
    // 初期化をしてからコーディング
    box-shadow: none;
    border: 1px solid #707070;
    background: #ffffff;
    padding: 10px 16px;
    appearance: none;
    border-radius: 0;
    color: inherit;
    font-family: inherit;
    font-size: 14px;
    width: 100%;
  }

  [type="email"] {
    box-shadow: none;
    border: 1px solid #707070;
    background: #ffffff;
    padding: 10px 16px;
    appearance: none;
    border-radius: 0;
    color: inherit;
    font-family: inherit;
    font-size: 14px;
    width: 100%;
  }

  select {
    box-shadow: none;
    border: 1px solid #707070;
    // selectは疑似要素が使えない
    // 右から12px離す
    // 横17px 縦14pxを入力する
    background: #ffffff url(../img/select-arrow.png) no-repeat right 12px center / 17px 14px;
    padding: 12px 16px;
    appearance: none;
    border-radius: 0;
    color: inherit;
    font-family: inherit;
    font-size: 14px;
    width: 100%;
  }

  textarea {
    height: 240px;
    box-shadow: none;
    border: 1px solid #707070;
    background: #ffffff;
    padding: 10px 16px;
    appearance: none;
    border-radius: 0;
    color: inherit;
    font-family: inherit;
    font-size: 14px;
    width: 100%;
    // サイズを変えられないようにする
    resize: none;
  }
}



.contact-form__radio {
  margin-top: 32px;

  @include mq('sp') {
    margin-top: 26px;
  }
  [type="radio"] {
    display: none;
  }

  span {
    display:inline-block;
    padding-left: 26px;
    position: relative;
    margin-right: 36px;

    @include mq('sp') {
      margin-bottom: 8px;
      margin-right: 20px;
    }

    &::before {
      content: "";
      width: 20px;
      height: 20px;
      border: 1px solid #707070;
      position: absolute;
      left: 0;
      top: 50%;
      transform: translateY(-50%);
      background: #ffffff;
      border-radius: 50%;
    }

    &::after {
      content: "";
      width: 10px;
      height: 10px;
      background: $color-main;
      position: absolute;
      left: 5px;
      top: 50%;
      transform: translateY(-50%);
      border-radius: 50%;
      display: none;
    }
  }

  [type="radio"]:checked + span {
    &::after {
      display: block;
    }
  }
}

.contact-form__check {
  margin-top: 63px;
  text-align: center;

@include mq('sp') {
  margin-top: 40px;
}

  [type="checkbox"] {
    display: none;
  }

  span {
    display: inline-block;
    padding-left: 49px;
    position: relative;
    &::before {
      content: "";
      width: 25px;
      height: 25px;
      background: #ffffff;
      border: 1px solid #707070;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: 0;
    }

    &::after {
      content: "";
      width: 25px;
      height: 25px;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: 0;
      background: url(../img/checkbox.png) no-repeat center center / contain;
      display: none;
    }
  }
  [type="checkbox"]:checked + span {
    &::after {
      display: block;
    }
  }
  a {
    font-weight: 700;
    transition: all 0.3s ease 0s;

    &:hover {
      opacity: 0.7;
    }
  }
}

.contact-form__button {
  // 属性クラスで指定する
  margin-top: 30px;
  text-align: center;
  [type="submit"] {
    background: $color-main url(../img/button-arrow.png) no-repeat right 12px center / 17px 16px;
    width: 304px;
    display: inline-block;
    font-weight: 700;
    color: #fff;
    padding: 14px 20px;
    border-radius: 8px;
    box-sizing: 0 3px 6px rgba(#000, 0.16);
    // 初期化のコードを入れてあげる
    appearance: none;
    font-family: inherit;
    border: none;
    font-size: 16px;
    cursor: pointer;
    transition: all 0.3s ease 0s;

    &:hover {
      opacity: 0.7;
    }
  }
}

// ---------- footer -------------//

.footer {
  // グラデーションを表現する
  background: linear-gradient(to bottom, #666666, #333333);
  padding: 60px 0 24px;
  color: #ffffff;

  @include mq('sp') {
    padding-top: 30px;
    padding-bottom: 14px;
  }
}

.footer__inner {

}

.footer__content {
  display: flex;

  @include mq('sp') {
    display: block;
  }
}

.footer__left {
  width: 36%;
  @include mq('sp') {
    width: 100%;
  }
}

.footer__logo {
  a {
    
  }
  
  img {
    width: 205px;
  }
}

.footer__address,
.footer__tel {
  font-size: 14px;
  @include mq('sp') {
    margin-left: 10px;
  }
}

.footer__address {
  margin-top: 28px;

  @include mq('sp') {
    margin-top: 13px;
  }
}

.footer__tel {
  margin-top: 10px;

  @include mq('sp') {
    margin-top: 6px;
  }
}

.footer__center {
  width: 48%;
  @include mq('sp') {
    width: 100%;
    margin-top: 24px;
  }
}
.footer__nav {
  display: flex;
  @include mq('sp') {
    justify-content: center;
  }
  li {
    &:not(:first-child) {
      margin-left: 40px;

      @include mq('sp') {
        margin-left: 20px;
      }
    }
    a {
      text-decoration: none;
      transition: all 0.3s ease 0s;

      &:hover {
        opacity: 0.7;
      }
    }
  }
}

.footer__right {
  width: 16%;
  @include mq('sp') {
    width: 100%;
    margin-top: 24px;
  }
}

.footer__sns {
  display: flex;
  // justify-content flex-endで右によせることができる
  justify-content: flex-end;

  @include mq('sp') {
    justify-content: center;
  }
  li {
    &:not(:first-child) {
      margin-left: 16px;
    }
    a {
      text-decoration: none;
      transition: all 0.3s ease 0s;

      &:hover {
        opacity: 0.7;
      }
    }
    img {
      width: 30px;
    }
  }
}

.footer__copy{
  text-align: center;
  margin-top: 46px;

  @include mq('sp') {
    margin-top: 22px;
  }
}

.to-top {
  position: fixed;
  right: 24px;
  bottom: 24px;
  // もともとが非表示の設定を行う
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease 0s;

  @include mq('sp') {
    right: 12px;
    bottom: 12px;
  }
// 動かしたら見えるコードを追加する
  &.is-show {
    opacity: 1;
    visibility: visible;
  }
  a {
    text-decoration: none;
    transition: all 0.3s ease 0s;

    &:hover {
      opacity: 0.7;
    }
    img {
      width: 60px;

      @include mq('sp') {
        width: 40px;
      }
    }
  }
}

//  スワイパーのページ
.swiper-button-next {
  width: 41px;
  height: 40px;
  margin-top: -20px;
  right: calc(50% - #{$layout-width-inner / 2});
  background: url(../img/arrow-next.png) no-repeat center center / contain;
  &::after {
    display: none;
  }

  @include mq('tab') {
    right: 10px;
  }

  @include mq('sp') {
    right: 10px;
  }
}

.swiper-button-prev {
  width: 40px;
  height: 40px;
  margin-top: -20px;
  left: calc(50% - #{$layout-width-inner / 2});
  background: url(../img/arrow-prev.png) no-repeat center center / contain;
  &::after {
    display: none;
  }

  @include mq('tab') {
    left: 10px;
  }

  @include mq('sp') {
    left: 10px;
  }
}

.swiper-pagination-bullet {
  width: 16px;
  height: 16px;
  background: #ffffff;
  opacity: 1;
}

.swiper-container-horizontal>.swiper-pagination-bullets .swiper-pagination-bullet {
  margin-left: 8px;
  margin-right: 8px;
}

.swiper-pagination-bullet-active {
  background: #2F7DC8;
}

// ---------- drawer --------------//
.drawer-icon {
  position: fixed;
  top: 20px;
  right: 16px;
  z-index: 30;
  display: none;
  transition: transform 0.5s ease 0s;
  @include mq('sp') {
    display: block;
  }

  &.is-active {
    transform: translateX(-200px);

    .drawer-icon__bar1 {
      transform: rotate(-45deg);
      top: 8px;
    }

    .drawer-icon__bar2 {
      display: none;
    }

    .drawer-icon__bar3 {
      transform: rotate(45deg);
      top: 8px;
    }
  }
}

.drawer-icon__bars {
  width: 22px;
  height: 20px;
  display: block;
  position: relative;
}

.drawer-icon__bar1,
.drawer-icon__bar2,
.drawer-icon__bar3 {
  position: absolute;
  width: 22px;
  height: 4px;
  background: #ffffff;
  top: 0;
  left: 0;
}

.drawer-icon__bar1 {
  top: 0;
}

.drawer-icon__bar2 {
  top: 8px;
}

.drawer-icon__bar3 {
  top: 16px;
}

.drawer-content {
  width: 200px;
  height: 100%;
  position: fixed;
  right: 0;
  top: 0;
  background: #ffffff;
  box-shadow: 0 0 3px rgba(#000, 0.16);
  z-index: 29;
  // 横方向に右側に移動するので105%
  transform: translateX(105%);
  transition: transform 0.5s ease 0s;

  &.is-active {
    transform: translateX(0);
  }
}

.drawer-content_items {

}

.drawer-content__item {
  border-bottom: 1px dotted #707070;
  a {
    display: block;
    color: #707070;
    text-decoration: none;
    padding: 18px 20px;
    position: relative;

    &::after {
      content: "";
      position: absolute;
      right: 20px;
      top: 50%;
      transform: translateY(-50%);
      width: 8px;
      height: 11px;
      background: url(../img/arrow-b.png) no-repeat center center / contain;
    } 
  }
}

.drawer-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(#000, 0.8);
  z-index: 28;
  display: none;

  &.is-active {
    display: block;
  }
}

.qa {

}

.qa__inner {

}

.qa__head {

}

.qa__items {
  width: 900px;
  max-width: 100%;
  margin-top: 80px;
  margin-bottom: 0;
  margin-left: auto;
  margin-right: auto;
}

.qa__item {
  &:nth-child(n + 2) {
    margin-top: 24px;
  }
}

.qa-box {
  border: 1px solid $color-main;
}

.qa-box__q {
  color: #ffffff;
  background: $color-main;
  padding: 12px 56px;
  font-weight: 700;
  position: relative;

  // Qの箇所をbeforeと疑似要素で作成する
  &::before {
    content: "Q";
    position: absolute;
    top: 12px;
    left: 20px;
  }
}

.qa-box__icon {
  width: 14px;
  height: 14px;
  position: absolute;
  right: 14px;
  top: 50%;
  transform: translateY(-50%);
}

.qa-box__bar1 {
  width: 14px;
  height: 2px;
  background: #ffffff;
  border-radius: 20px;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: 0;
}

.qa-box__bar2 {
  width: 2px;
  height: 14px;
  background: #ffffff;
  border-radius: 20px;
  position: absolute;
  left: 50%;
  top: 0;
  transform: translateX(-50%);
}

.qa-box__a {
  background: #ffffff;
  color: $color-main;
  line-height: (24 / 16);
  padding: 16px 30px 16px 20px;
}

.qa-box__content {
  position: relative;
  padding-left: 35px;
  font-weight: 700;

  &::before {
    content: "A";
    position: absolute;
    top: 0;
    left: 0;
  }
}