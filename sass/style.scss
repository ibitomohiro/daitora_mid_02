$color-main: #3F51B5;
$color-accent: #E81919;
$color-text: #333333;

$layout-width-inner: 1200px;

// ブレイクポイント
$breakpoints: (
  "sp": "(max-width: 767px)",
  "tab": "(min-width: 768px) and (max-width: #{$layout-width-inner - 1px})",
  "pc": "(min-width: #{layout-width-inner})",
)!default;

// メディアクエリ
@mixin mq($breakpoint: sp) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

// ボーダーの幅を含めるようにリセットCSS 
*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body {
  padding: 0;
  margin: 0;
}

body {
  font-family: "游ゴシック体", YuGothic, "游ゴシック Medium", "Yu Gothic Medium", "游ゴシック", "Yu Gothic", sans-serif;
  font-size: 16px;
  line-height: 1.6;
  background: #fff;
  color: $color-text;
}

img {
  // 画像を指定の範囲にしてしてもらうようにする
  max-width: 100%;
  height: auto;
}

ul,
ol {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}

.inner {
  // 幅はインナーの最大を取るように
  width: $layout-width-inner;
  max-width: 100%;
  // 幅を中央寄せする
  margin: 0 auto;

  @include mq('tab') {
    padding-left: 24px;
    padding-right: 24px;
  }

  @include mq('sp') {
    padding-left: 16px;
    padding-right: 16px;
  }

}

a {
  // 親要素を継承するようにする
  color: inherit;
}

.header {
  background: $color-main;
  // ヘッダーの幅は100pxデザインカンプを確認
  height: 100px;
  // ヘッダーの固定
  position: fixed;
  // fixedを指定すると幅がなくなるので100%をつける
  width: 100%;
  // ヘッダーにシャドウがあるのでコーディング
  box-shadow: 0 3px 3px rgba(#000, 0.16);
  z-index: 2;
  top: 0;

  @include mq('sp') {
    // ヘッダーが高くなるので高さを調整、次にmain-vidualの上の余白を調整
    height: 60px;
  }
}

.header__inner {
  // ロゴとnavを横並びにするのでflexをあてる
  display: flex;
  align-items: center;
  // headerの100pxを継承するように上方向に高さを出す
  height: inherit;
}

.header__logo {
  // logoは w205px h40px
  width: 205px;

  @include mq('sp') {
    width: 182px;
  }
  img {
    // 画像はblock要素に変える 余白を出さないために inline-bolockではなく
    display: block;
  }
}

.header__nav {
  // liを横並びにするために親要素にflexを当てる
  display: flex;
  // 文字を上下中央寄せする
  align-items: center;
  // logoとnavを左側から離す
  margin-left: auto;

   @include mq('sp') {
    //  スマホサイズになったときnavが消えるようにする
     display: none;
   }
  li {
    // 最初の文字の余白入らないのでnot:nth-child
    &:not(:first-child) {
      // 文字の幅は40px
      margin-left: 40px;
    }
    a {
      color: #fff;
      text-decoration: none;
      position: relative;

      &.is-active {
        &::after {
          content: "";
          position: absolute;
          // navから8px下にあるため
          bottom: -8px;
          left: 0;
          width: 100%;
          // 栓の高さ
          height: 2px;
          background: $color-accent;
        }
      }
    }
  }
}

// --------------main visual---------------
.main-visual {
  // 背景画像はw1200px * h600px
  height: 600px;
  width: 100%;
  // 繰り返さない、縦横中央、全体を覆うように
  background: url(../img/mainvisual.png) no-repeat center center /cover;
  // 親 absolute 子 relative
  position: relative;
  // fixedだとヘッダーの下に画像が回り込むのでヘッダーの高さ分マージンを取る
  // topにゼロをつけないと空白ができるのでそれも合わせてコーディングする
  margin-top: 100px;

  @include mq('sp') {
    margin-top: 60px;
    height: 420px;
  }
}

.main-visual__content {
  // 上下中央のCSSなので覚える
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  // コンテンツ全体にtext-align center を適用させる！
  text-align: center;
}

.main-visual__title {
  font-size: 64px;
  font-weight: 700;
  line-height: 1.3;

  @include mq('sp') {
    font-size: 32px;
  }
}

.main-visual__lead {
  font-size: 24px;
  font-weight: 700;
  // 実際より少し小さい値にすると良いらしい
  margin-top: 24px;

  @include mq('sp') {
    font-size: 18px;
    margin-top: 10px;
  }
}

.main-visual__button {
  margin-top: 36px;

  @include mq('sp') {
    margin-top: 28px;
  }

  a {
    display: inline-block;
    width: 390px;
    // ボタンの文字に固定値を設定した場合max-widthをつける
    max-width: 100%;
    height: 83px;
    line-height: 83px;
    font-size: 32px;
    font-weight: 700;
    text-align: center;
    color: #ffffff;
    background: $color-main;
    border-radius: 12px;
    box-shadow: 0 3px 6px rgba(#000, 0.16);
    text-decoration: none;

    @include mq('sp') {
      width: 280px;
      height: 60px;
      line-height: 60px;
      font-size: 24px;
    }
  }
}

// --------------------カード-----------------------//
.card {
  // カード全体の色余白をコーディング
  margin-top: 100px;
  background: #efefef;
  // 余白は上が100px,左右0, 下に120px
  padding: 100px 0 120px 0;
}

.card__inner {

}

.card__head {
  font-size: 48px;
  font-weight: 700;
  text-align: center;
  // 下に青いバーがあるのでそのスペースを取る
  padding-bottom: 28px;
  position: relative;

  &::after {
    content: "";
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    bottom: 0;
    // 青い線の大きさ w60 * h 4px
    width: 60px;
    height: 4px;
    background: $color-main;
  }
}

.card__items {
  margin-top: 80px;
  // card-itemsを横並びにするので親要素にflexを当てる
  display: flex;
  // 改行があるのでflex wrapを当てる
  flex-wrap: wrap;
}

.card__item {
  // 3等分なので33.3% 余白24pxが2つ カードが3つなので3で割るというロジック
  width: calc(33.3% - 24px * 2 / 3);
  background: #ffffff;
  padding: 16px;
  border-radius: 4px;

  &:not(:nth-child(3n + 1)) {
    margin-left: 24px;
  }

  &:nth-child(n + 4) {
    // 最上部のカード以外はmargin-top24pxが適用されるようにする。　
    margin-top: 24px;
  }
}

.card__img {
  img {

  }
}

.card_title  {
  font-size: 20px;
  font-weight: 700;
  color: #6f7579;
  margin-top: 14px;
}

.card__text {
  color: #6f7579;
  font-weight: 700;
  // 2行以上の文章の場合はline heightを調整する必要がある
  // 行間24px font-size16pxなので 行間 / line-height の計算をする
  line-height: (24 / 16);
  margin-top: 10px;
}